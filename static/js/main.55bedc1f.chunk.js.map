{"version":3,"sources":["redux/todoSlice.js","components/AddTodoForm.js","components/TodoItem.js","components/TodoList.js","components/TotalCompleteItems.js","App.js","redux/store.js","index.js"],"names":["todoSlice","createSlice","require","name","initialState","todos","reducers","addTodo","state","action","newTodo","id","Date","now","title","payload","completed","push","toggleComplete","index","findIndex","todo","deleteTodo","filter","actions","AddTodoForm","useState","value","setValue","dispatch","useDispatch","onSubmit","e","preventDefault","trim","length","className","type","placeholder","onChange","target","TodoItem","checked","TodoList","useSelector","map","TotalCompleteItems","completedTodos","App","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"+LAEMA,GAAYC,EAFMC,EAAQ,GAAxBD,aAEsB,CAC5BE,KAAM,QACNC,aAAc,CACZC,MAAO,IAETC,SAAU,CACRC,QAAS,SAACC,EAAOC,GACf,IAAMC,EAAU,CACdC,GAAIC,KAAKC,MACTC,MAAOL,EAAOM,QAAQD,MACtBE,WAAW,GAGbR,EAAMH,MAAMY,KAAKP,IAGnBQ,eAAgB,SAACV,EAAOC,GACtB,IAAMU,EAAQX,EAAMH,MAAMe,WACxB,SAACC,GAAD,OAAUA,EAAKV,KAAOF,EAAOM,QAAQJ,MAGvCH,EAAMH,MAAMc,GAAOH,UAAYP,EAAOM,QAAQC,WAGhDM,WAAY,SAACd,EAAOC,GAClBD,EAAMH,MAAQG,EAAMH,MAAMkB,QAAO,SAACF,GAAD,OAAUA,EAAKV,KAAOF,EAAOM,QAAQJ,U,EAKrBX,EAAUwB,QAAlDjB,E,EAAAA,QAASW,E,EAAAA,eAAgBI,E,EAAAA,WAEzBtB,IAAf,Q,OCOeyB,EArCK,WAAO,IAAD,EACEC,mBAAS,IADX,mBACjBC,EADiB,KACVC,EADU,KAGlBC,EAAWC,cAgBjB,OACE,uBAAMC,SAfS,SAACC,GAChBA,EAAEC,iBAEEN,EAAMO,OAAOC,QACfN,EACEtB,EAAQ,CACNO,MAAOa,KAKbC,EAAS,KAIiBQ,UAAU,wBAApC,UACE,uBAAOA,UAAU,UAAjB,kBACA,uBACEC,KAAK,OACLD,UAAU,4BACVE,YAAY,cACZX,MAAOA,EACPY,SAAU,SAACP,GAAD,OAAOJ,EAASI,EAAEQ,OAAOb,UAGrC,wBAAQU,KAAK,SAASD,UAAU,uBAAhC,wBCMSK,EApCE,SAAC,GAA8B,IAA5B9B,EAA2B,EAA3BA,GAAIG,EAAuB,EAAvBA,MAAOE,EAAgB,EAAhBA,UACvBa,EAAWC,cAcjB,OACE,oBAAIM,UAAS,0BAAqBpB,GAAa,2BAA/C,SACE,uBACEe,SAXoB,WACxBF,EACEP,EAAW,CACTX,SASAyB,UAAU,iCAFZ,UAIE,uBAAMA,UAAU,4BAAhB,UACE,uBACEC,KAAK,WACLD,UAAU,OACVM,QAAS1B,EACTuB,SAvBkB,WAC1BV,EAASX,EAAe,CAAEP,GAAIA,EAAIK,WAAYA,QAwBvCF,KAEH,wBAAQsB,UAAU,iBAAlB,0BClBOO,EAZE,WACf,IAAMtC,EAAQuC,aAAY,SAACpC,GAAD,OAAWA,EAAMH,MAAMA,SAEjD,OACE,oBAAI+B,UAAU,aAAd,SACG/B,EAAMwC,KAAI,SAACxB,GAAD,OACT,cAAC,EAAD,CAAwBV,GAAIU,EAAKV,GAAIG,MAAOO,EAAKP,MAAOE,UAAWK,EAAKL,WAAzDK,EAAKV,UCCbmC,EARY,WACzB,IAAMC,EAAiBH,aAAY,SAACpC,GAAD,OACjCA,EAAMH,MAAMA,MAAMkB,QAAO,SAACF,GAAD,OAA6B,IAAnBA,EAAKL,gBAG1C,OAAO,qBAAIoB,UAAU,OAAd,mCAA4CW,EAAeZ,WCSrDa,EAXH,WACX,OACC,sBAAKZ,UAAU,8BAAf,UACC,8CACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,Q,OCTUa,EAAQC,yBAAe,CAClCC,QAAS,CACP9C,MAAML,KCEVoD,IAASC,OACP,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFK,SAASC,eAAe,W","file":"static/js/main.55bedc1f.chunk.js","sourcesContent":["const { createSlice } = require(\"@reduxjs/toolkit\");\r\n\r\nconst todoSlice = createSlice({\r\n  name: \"todos\",\r\n  initialState: {\r\n    todos: [],\r\n  },\r\n  reducers: {\r\n    addTodo: (state, action) => {\r\n      const newTodo = {\r\n        id: Date.now(),\r\n        title: action.payload.title,\r\n        completed: false,\r\n      };\r\n\r\n      state.todos.push(newTodo);\r\n    },\r\n\r\n    toggleComplete: (state, action) => {\r\n      const index = state.todos.findIndex(\r\n        (todo) => todo.id === action.payload.id\r\n      );\r\n\r\n      state.todos[index].completed = action.payload.completed;\r\n    },\r\n\r\n    deleteTodo: (state, action) => {\r\n      state.todos = state.todos.filter((todo) => todo.id !== action.payload.id);\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addTodo, toggleComplete, deleteTodo } = todoSlice.actions;\r\n\r\nexport default todoSlice.reducer;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addTodo } from \"../redux/todoSlice\";\r\n\r\nconst AddTodoForm = () => {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (value.trim().length) {\r\n      dispatch(\r\n        addTodo({\r\n          title: value,\r\n        })\r\n      );\r\n    }\r\n\r\n    setValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"form-inline mt-3 mb-3\">\r\n      <label className=\"sr-only\">Name</label>\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control mb-2 mr-sm-2\"\r\n        placeholder=\"Add todo...\"\r\n        value={value}\r\n        onChange={(e) => setValue(e.target.value)}\r\n      ></input>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary mb-2\">\r\n        Submit\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddTodoForm;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteTodo, toggleComplete } from \"../redux/todoSlice\";\r\n\r\nconst TodoItem = ({ id, title, completed }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleCompleteClick = () => {\r\n    dispatch(toggleComplete({ id: id, completed: !completed }));\r\n  };\r\n\r\n  const handleDeleteClick = () => {\r\n    dispatch(\r\n      deleteTodo({\r\n        id,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <li className={`list-group-item ${completed && \"list-group-item-success\"}`}>\r\n      <form\r\n        onSubmit={handleDeleteClick}\r\n        className=\"d-flex justify-content-between\"\r\n      >\r\n        <span className=\"d-flex align-items-center\">\r\n          <input\r\n            type=\"checkbox\"\r\n            className=\"mr-3\"\r\n            checked={completed}\r\n            onChange={handleCompleteClick}\r\n          ></input>\r\n          {title}\r\n        </span>\r\n        <button className=\"btn btn-danger\">Delete</button>\r\n      </form>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nconst TodoList = () => {\r\n  const todos = useSelector((state) => state.todos.todos);\r\n\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {todos.map((todo) => (\r\n        <TodoItem key={todo.id} id={todo.id} title={todo.title} completed={todo.completed} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst TotalCompleteItems = () => {\r\n  const completedTodos = useSelector((state) =>\r\n    state.todos.todos.filter((todo) => todo.completed === true)\r\n  );\r\n\r\n  return <h4 className=\"mt-3\">Total Complete Items: {completedTodos.length}</h4>;\r\n};\r\n\r\nexport default TotalCompleteItems;\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport AddTodoForm from './components/AddTodoForm';\r\nimport TodoList from './components/TodoList';\r\nimport TotalCompleteItems from './components/TotalCompleteItems';\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t<div className='container bg-white p-4 mt-5'>\r\n\t\t\t<h1>My Todo List</h1>\r\n\t\t\t<AddTodoForm />\r\n\t\t\t<TodoList />\r\n\t\t\t<TotalCompleteItems />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport todoSlice from \"./todoSlice\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    todos:todoSlice,\r\n    \r\n\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}